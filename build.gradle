plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'

}

group = 'com.danal'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

dependencies {
	// spring
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// db
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2:2.2.224'
	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'com.h2database:h2:2.2.224'

	// fixture monkey
	implementation 'com.navercorp.fixturemonkey:fixture-monkey:1.0.16'

	// auto params
//	testImplementation 'io.github.autoparams:autoparams:8.3.0'

	// rest docs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	implementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// poi
	implementation 'org.apache.poi:poi:5.2.5'
	implementation 'org.apache.poi:poi-ooxml:5.2.5'

	// QueryDSL 설정
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// p6spy
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'


}

tasks.named('test') {
	useJUnitPlatform()
}

def generatedDir = 'src/main/generated'

clean {
	delete file (generatedDir)
}

sourceSets {
	main {
		java {
			srcDirs += ['src/main/java', 'batch/build/generated/sources/annotationProcessor/java/main']
		}
	}
}


asciidoctor {
	sourceDir 'src/docs/asciidoc'
	outputDir file("build/docs/asciidoc")
	attributes(
			'snippets': file("build/generated-snippets"),
			'stylesheet': 'custom-style.css',
			'stylesdir': 'src/docs/asciidoc'
	)
}

tasks.named('asciidoctor') {
	dependsOn 'test'
}

bootJar {
	dependsOn 'asciidoctor'
	from("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}